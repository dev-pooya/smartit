---
import "aos/dist/aos.css";
import "../styles/globals.css";
import OrderDrawer from "@/components/OrderDrawer";
interface Props {
  title: string;
  keywords?: string;
  description?: string;
  prefetch?: string;
}

const { title, keywords, description, prefetch } = Astro.props;
---

<!doctype html>
<html lang="fa" dir="rtl" class="dark font-custom">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon2.svg" />
    <link rel="stylesheet" href="/fonts/font.css" />
    <meta name="generator" content={Astro.generator} />
    {prefetch && <link rel="prefetch" href={prefetch} />}
    <title>{title}</title>
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "LocalBusiness",
        "name": "smart it",
        "image": "https://smartitgroups.com/_astro/siteLogo.C9KRK0rX_2r9uSt.svg",
        "@id": "https://smartitgroups.com",
        "url": "https://smartitgroups.com",
        "telephone": "09146749242",
        "priceRange": "10M-150M",
        "address": {
          "@type": "PostalAddress",
          "streetAddress": "",
          "addressLocality": "maku",
          "postalCode": "",
          "addressCountry": "IR"
        },
        "openingHoursSpecification": {
          "@type": "OpeningHoursSpecification",
          "dayOfWeek": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Saturday",
            "Sunday"
          ],
          "opens": "09:00",
          "closes": "08:30"
        },
        "sameAs": ""
      }
    </script>
  </head>
  <body class="bg-background overflow-x-hidden">
    <slot />
    <OrderDrawer client:load />
  </body>
  <script>
    import AOS from "aos";
    window.addEventListener("load", function () {
      AOS.init();
    });
    window.addEventListener("DOMContentLoaded", () => {
      function initAccordion() {
        const a = document.querySelectorAll("[data-element=accordion]");
        a.forEach((e) => {
          const s = e.querySelector("[data-element=accordion-btn]"),
            i = e.querySelector("[data-element=accordion-chevron]"),
            r = e.querySelector("[data-element=accordion-content]");

          s &&
            r &&
            i &&
            s.addEventListener(
              "click",
              (c) => (
                console.log("event aded"),
                e.classList.contains("active")
                  ? (e.classList.remove("active"),
                    s.setAttribute("aria-expanded", "false"),
                    (r.style.maxHeight = "0px"),
                    i.classList.remove("rotate-180"),
                    setTimeout(() => {
                      r.classList.add("hidden");
                    }, 300))
                  : (e.classList.add("active"),
                    s.setAttribute("aria-expanded", "true"),
                    r.classList.remove("hidden"),
                    (r.style.maxHeight = r.scrollHeight + "px"),
                    i.classList.add("rotate-180"),
                    a.forEach((t) => {
                      t !== e &&
                        (t.classList.remove("active"),
                        t
                          .querySelector("[data-element=accordion-btn]")
                          ?.setAttribute("aria-expanded", "false"),
                        t
                          .querySelector("[data-element=accordion-content]")
                          ?.setAttribute("style", "max-height: 0px"),
                        t
                          .querySelector("[data-element=accordion-chevron]")
                          ?.classList.remove("rotate-180"),
                        setTimeout(() => {
                          t.querySelector(
                            "[data-element=accordion-content]"
                          )?.classList.add("hidden");
                        }, 300));
                    })),
                c.preventDefault(),
                !1
              )
            );
        });
      }
      // init
      initAccordion();
    });
  </script>
</html>
