---
import Header from "@/components/Header.astro";
import MobileHeader from "@/components/MobileHeader.astro";
import { Card } from "@/components/ui/card";
import Layout from "@/layouts/Layout.astro";
import BannerSection from "@/sections/BannerSection.astro";
import Footer from "@/sections/Footer.astro";
import { getCollection, getEntry } from "astro:content";
import { CommentForm } from "@/components/CommentForm";
import { getComments } from "@/lib/utils";
import Comments from "@/components/Comments.astro";

// Fetch the paths for all services
export async function getStaticPaths() {
  const blogs = await getCollection("blogs");

  return blogs.map((blog) => ({
    params: { slug: blog.slug },
  }));
}

const { slug } = Astro.params;

// Fetch the service entry for the given slug
const blog = await getEntry("blogs", slug);

if (!blog) {
  throw new Error(`blog not found: ${slug}`);
}

// Render the Markdown content and headings
const { Content } = await blog.render();

const { id, title, thumbnail, tags, headings, keywords, description, alt } =
  blog.data;

const commentsData = await getComments(id);
---

<Layout
  title={title + " | هوش آی تی"}
  keywords={keywords}
  description={description}
>
  <Header />
  <MobileHeader />
  <main class="sm:pt-20">
    <div
      class="max-w-screen-xl 2xl:max-w-screen-2xl mx-auto p-5 md:grid md:grid-cols-4 md:gap-6"
    >
      <div class="mx-auto md:w-3/4 col-span-4">
        <img src={thumbnail} class="w-full rounded-xl" alt={alt} />
      </div>
      <h1
        class="colored-title text-2xl md:text-5xl leading-tight font-medium md:text-center py-6 col-span-4"
      >
        {title}
      </h1>
      <article class="col-span-3 md:border-r-4 md:pr-3">
        <Content />
      </article>
      <aside class="hidden md:block">
        <Card className="p-4 sticky top-10">
          <ul class="flex flex-col gap-3">
            {
              headings.map((heading) => (
                <li class="font-medium py-3 ">
                  <a href={`#${heading.id}`}> {heading.title}</a>
                  {heading.subHeadings && (
                    <ul class="py-3 list-inside list-[square]">
                      {heading.subHeadings.map((sub) => (
                        <li class="pr-1 text-sm py-1 ">
                          <a href={`#${sub.id}`}>{sub.title}</a>
                          {sub.subHeadings && (
                            <ul class="py-2 list-inside list-[circle] my-2">
                              {sub.subHeadings.map((subSub) => (
                                <li class="pr-2 text-sm py-1 ">
                                  <a href={`#${subSub.id}`}> {subSub.title}</a>
                                </li>
                              ))}
                            </ul>
                          )}
                        </li>
                      ))}
                    </ul>
                  )}
                </li>
              ))
            }
          </ul>
        </Card>
      </aside>
      <div class="pt-3 mt-3 col-span-3">
        <h2 class="text-3xl md:text-4xl py-4 font-semibold">نظرات کاربران</h2>
        <CommentForm blogId={id} client:load />
        <Comments comments={commentsData} />
      </div>
    </div>
  </main>
  <BannerSection />
  <Footer />

  <script>
    const likeBtns = document.querySelectorAll("[data-element=like-btn]");
    const dislikeBtns = document.querySelectorAll("[data-element=dislike-btn]");
    likeBtns.forEach((btn) => {
      btn.addEventListener("click", (e) => {
        // get the id
        const id = e.currentTarget.getAttribute("data-id");

        // edit the content
        e.currentTarget.querySelector("span").textContent++;

        // send request to server to like the element
        const res = fetch(`http://127.0.0.1:8000/api/comments/${id}/like`, {
          method: "post",
        });
        e.currentTarget.setAttribute("disabled", true);
      });
    });
    dislikeBtns.forEach((btn) => {
      btn.addEventListener("click", (e) => {
        // get the id
        const id = e.currentTarget.getAttribute("data-id");

        // edit the content
        e.currentTarget.querySelector("span").textContent++;

        // send request to server to like the element
        // TODO change the api address
        const res = fetch(`https://api.smartitgroups.com/api/comments/${id}/dislike`, {
          method: "post",
        });
        e.currentTarget.setAttribute("disabled", true);
      });
    });
  </script>
</Layout>
